# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-04-18 07:27
from __future__ import unicode_literals

import accounts.mixins
import dataset.validators
import datetime
from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import urn.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('metadata', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Creation date')),
                ('modification_date', models.DateField(default=datetime.date.today, verbose_name='Modification date')),
                ('publish_date', models.DateField(default=None, null=True, verbose_name='Published on')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('private', models.BooleanField(default=True, verbose_name='Private')),
                ('last_child_value', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('extra_metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, verbose_name='Additional metadata')),
                ('abstract_text', models.TextField(blank=True, default='', verbose_name='Abstract')),
                ('method_text', models.TextField(blank=True, default='', verbose_name='Method description')),
                ('short_description', models.CharField(default='', max_length=512, verbose_name='Short description')),
                ('title', models.TextField(default='', max_length=256, verbose_name='Short title')),
                ('urn', models.CharField(blank=True, default=None, max_length=64, null=True, unique=True, validators=[urn.validators.validate_mavedb_urn_experiment], verbose_name='URN')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_created_experiment', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('doi_ids', models.ManyToManyField(blank=True, related_name='associated_experiments', to='metadata.DoiIdentifier', verbose_name='DOI Identifiers')),
            ],
            options={
                'verbose_name': 'Experiment',
                'verbose_name_plural': 'Experiments',
                'permissions': (('can_view', 'Can view'), ('can_edit', 'Can edit'), ('can_manage', 'Can manage')),
            },
            bases=(models.Model, accounts.mixins.GroupPermissionMixin),
        ),
        migrations.CreateModel(
            name='ExperimentSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Creation date')),
                ('modification_date', models.DateField(default=datetime.date.today, verbose_name='Modification date')),
                ('publish_date', models.DateField(default=None, null=True, verbose_name='Published on')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('private', models.BooleanField(default=True, verbose_name='Private')),
                ('last_child_value', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('extra_metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, verbose_name='Additional metadata')),
                ('abstract_text', models.TextField(blank=True, default='', verbose_name='Abstract')),
                ('method_text', models.TextField(blank=True, default='', verbose_name='Method description')),
                ('short_description', models.CharField(default='', max_length=512, verbose_name='Short description')),
                ('title', models.TextField(default='', max_length=256, verbose_name='Short title')),
                ('urn', models.CharField(blank=True, default=None, max_length=64, null=True, unique=True, validators=[urn.validators.validate_mavedb_urn_experimentset], verbose_name='URN')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_created_experimentset', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('doi_ids', models.ManyToManyField(blank=True, related_name='associated_experimentsets', to='metadata.DoiIdentifier', verbose_name='DOI Identifiers')),
                ('keywords', models.ManyToManyField(blank=True, related_name='associated_experimentsets', to='metadata.Keyword', verbose_name='Keywords')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_edited_experimentset', to=settings.AUTH_USER_MODEL, verbose_name='Last edited by')),
                ('pubmed_ids', models.ManyToManyField(blank=True, related_name='associated_experimentsets', to='metadata.PubmedIdentifier', verbose_name='PubMed Identifiers')),
                ('sra_ids', models.ManyToManyField(blank=True, related_name='associated_experimentsets', to='metadata.SraIdentifier', verbose_name='SRA Identifiers')),
            ],
            options={
                'verbose_name': 'ExperimentSet',
                'verbose_name_plural': 'ExperimentSets',
                'permissions': (('can_view', 'Can view'), ('can_edit', 'Can edit'), ('can_manage', 'Can manage')),
            },
            bases=(models.Model, accounts.mixins.GroupPermissionMixin),
        ),
        migrations.CreateModel(
            name='ScoreSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Creation date')),
                ('modification_date', models.DateField(default=datetime.date.today, verbose_name='Modification date')),
                ('publish_date', models.DateField(default=None, null=True, verbose_name='Published on')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('private', models.BooleanField(default=True, verbose_name='Private')),
                ('last_child_value', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('extra_metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, verbose_name='Additional metadata')),
                ('abstract_text', models.TextField(blank=True, default='', verbose_name='Abstract')),
                ('method_text', models.TextField(blank=True, default='', verbose_name='Method description')),
                ('short_description', models.CharField(default='', max_length=512, verbose_name='Short description')),
                ('title', models.TextField(default='', max_length=256, verbose_name='Short title')),
                ('urn', models.CharField(blank=True, default=None, max_length=64, null=True, unique=True, validators=[urn.validators.validate_mavedb_urn_scoreset], verbose_name='URN')),
                ('dataset_columns', django.contrib.postgres.fields.jsonb.JSONField(default={'count_columns': [], 'metadata_columns': [], 'score_columns': ['score']}, validators=[dataset.validators.validate_scoreset_json], verbose_name='Dataset columns')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_created_scoreset', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('doi_ids', models.ManyToManyField(blank=True, related_name='associated_scoresets', to='metadata.DoiIdentifier', verbose_name='DOI Identifiers')),
                ('experiment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='scoresets', to='dataset.Experiment', verbose_name='Experiment')),
                ('keywords', models.ManyToManyField(blank=True, related_name='associated_scoresets', to='metadata.Keyword', verbose_name='Keywords')),
                ('licence', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='attached_scoresets', to='main.Licence', verbose_name='Licence')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_edited_scoreset', to=settings.AUTH_USER_MODEL, verbose_name='Last edited by')),
                ('pubmed_ids', models.ManyToManyField(blank=True, related_name='associated_scoresets', to='metadata.PubmedIdentifier', verbose_name='PubMed Identifiers')),
                ('replaces', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='replaced_by', to='dataset.ScoreSet', verbose_name='Replaces')),
                ('sra_ids', models.ManyToManyField(blank=True, related_name='associated_scoresets', to='metadata.SraIdentifier', verbose_name='SRA Identifiers')),
            ],
            options={
                'verbose_name': 'ScoreSet',
                'verbose_name_plural': 'ScoreSets',
                'permissions': (('can_view', 'Can view'), ('can_edit', 'Can edit'), ('can_manage', 'Can manage')),
            },
            bases=(models.Model, accounts.mixins.GroupPermissionMixin),
        ),
        migrations.AddField(
            model_name='experiment',
            name='experimentset',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='experiments', to='dataset.ExperimentSet', verbose_name='Experiment Set'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='keywords',
            field=models.ManyToManyField(blank=True, related_name='associated_experiments', to='metadata.Keyword', verbose_name='Keywords'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_edited_experiment', to=settings.AUTH_USER_MODEL, verbose_name='Last edited by'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='pubmed_ids',
            field=models.ManyToManyField(blank=True, related_name='associated_experiments', to='metadata.PubmedIdentifier', verbose_name='PubMed Identifiers'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='sra_ids',
            field=models.ManyToManyField(blank=True, related_name='associated_experiments', to='metadata.SraIdentifier', verbose_name='SRA Identifiers'),
        ),
    ]
