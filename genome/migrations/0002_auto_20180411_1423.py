# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-04-11 04:23
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import genome.validators


class Migration(migrations.Migration):

    dependencies = [
        ('metadata', '0002_auto_20180411_1423'),
        ('dataset', '0002_auto_20180411_1423'),
        ('genome', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Creation date')),
                ('modification_date', models.DateField(default=datetime.date.today, verbose_name='Modification date')),
            ],
            options={
                'verbose_name': 'Annotation',
                'verbose_name_plural': 'Annotations',
            },
        ),
        migrations.CreateModel(
            name='Interval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Creation date')),
                ('modification_date', models.DateField(default=datetime.date.today, verbose_name='Modification date')),
                ('start', models.PositiveIntegerField(default=None, validators=[django.core.validators.MinValueValidator(1, message='The minimum starting positive is 1.')], verbose_name='Interval start')),
                ('end', models.PositiveIntegerField(default=None, verbose_name='Interval end (inclusive)')),
                ('chromosome', models.PositiveIntegerField(default=None, verbose_name='Chromosome identifier')),
                ('strand', models.CharField(choices=[('F', 'Forward'), ('R', 'Reverse')], default=None, max_length=1, verbose_name='Strand')),
            ],
            options={
                'verbose_name': 'Reference Interval',
                'verbose_name_plural': 'Reference Intervals',
                'ordering': ['start'],
            },
        ),
        migrations.DeleteModel(
            name='TargetOrganism',
        ),
        migrations.AlterModelOptions(
            name='referencegenome',
            options={'ordering': ['short_name'], 'verbose_name': 'Reference Genome', 'verbose_name_plural': 'Reference Genomes'},
        ),
        migrations.AlterModelOptions(
            name='targetgene',
            options={'ordering': ['name'], 'verbose_name': 'Target Gene', 'verbose_name_plural': 'Target Genes'},
        ),
        migrations.AlterModelOptions(
            name='wildtypesequence',
            options={'verbose_name': 'Wild Type Sequence', 'verbose_name_plural': 'Wild Type Sequences'},
        ),
        migrations.AddField(
            model_name='referencegenome',
            name='creation_date',
            field=models.DateField(default=datetime.date.today, verbose_name='Creation date'),
        ),
        migrations.AddField(
            model_name='referencegenome',
            name='ensembl_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.EnsemblIdentifier', verbose_name='Ensembl identifier'),
        ),
        migrations.AddField(
            model_name='referencegenome',
            name='is_primary',
            field=models.BooleanField(default=None),
        ),
        migrations.AddField(
            model_name='referencegenome',
            name='modification_date',
            field=models.DateField(default=datetime.date.today, verbose_name='Modification date'),
        ),
        migrations.AddField(
            model_name='referencegenome',
            name='refseq_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.RefseqIdentifier', verbose_name='RefSeq identifier'),
        ),
        migrations.AddField(
            model_name='referencegenome',
            name='short_name',
            field=models.CharField(default=None, max_length=256, verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='referencegenome',
            name='species_name',
            field=models.CharField(default=None, max_length=256, verbose_name='Species'),
        ),
        migrations.AddField(
            model_name='targetgene',
            name='creation_date',
            field=models.DateField(default=datetime.date.today, verbose_name='Creation date'),
        ),
        migrations.AddField(
            model_name='targetgene',
            name='modification_date',
            field=models.DateField(default=datetime.date.today, verbose_name='Modification date'),
        ),
        migrations.AddField(
            model_name='targetgene',
            name='name',
            field=models.CharField(default=None, max_length=256, verbose_name='Target name'),
        ),
        migrations.AddField(
            model_name='targetgene',
            name='wt_sequence',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='genome.WildTypeSequence', verbose_name='Wildtype Sequence'),
        ),
        migrations.AddField(
            model_name='wildtypesequence',
            name='creation_date',
            field=models.DateField(default=datetime.date.today, verbose_name='Creation date'),
        ),
        migrations.AddField(
            model_name='wildtypesequence',
            name='modification_date',
            field=models.DateField(default=datetime.date.today, verbose_name='Modification date'),
        ),
        migrations.AddField(
            model_name='wildtypesequence',
            name='sequence',
            field=models.TextField(default=None, validators=[genome.validators.validate_wildtype_sequence], verbose_name='Wildtype sequence'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='genome',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='genome.ReferenceGenome', verbose_name='Annotation genome'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='intervals',
            field=models.ManyToManyField(to='genome.Interval', verbose_name='Annotation intervals'),
        ),
        migrations.AddField(
            model_name='targetgene',
            name='annotations',
            field=models.ManyToManyField(to='genome.Annotation', verbose_name='Genome annotations'),
        ),
    ]
